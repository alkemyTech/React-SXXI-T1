{"version":3,"file":"static/js/465.883f38d6.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/Nav.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/NavItem.js","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@restart/ui/esm/TabContext.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    onSelect,\n    activeKey,\n    role,\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey; // TODO: do we need to duplicate these?\n\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  const listNode = useRef(null);\n\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n\n    if (!tabContext) {\n      return;\n    }\n\n    let nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","const _excluded = [\"as\", \"active\", \"eventKey\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null); // @ts-ignore\n\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n\n  if (props.role === 'tab') {\n    props['aria-selected'] = isActive;\n\n    if (!isActive) {\n      props.tabIndex = -1;\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n  }\n\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n\n    if (key == null) {\n      return;\n    }\n\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: Component = Button,\n    active,\n    eventKey\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options)); // @ts-ignore\n\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["useForceUpdate","useReducer","state","dataAttr","property","dataProp","activeElement","doc","ownerDocument","active","nodeName","e","body","resolveContainerRef","ref","document","canUseDOM","current","getBoundingClientRect","manager","_excluded","useModalManager","provided","window","useWindow","modalManager","ModalManager","getManager","modal","useRef","dialog","backdrop","Object","assign","add","remove","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","onResolved","useState","resolvedRef","setRef","earlyRef","useEffect","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","overflow","paddingProp","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","noop","EVENT_KEY_ATTR","Nav","getControlledId","getControllerId","as","Component","onSelect","activeKey","onKeyDown","forceUpdate","needsRefocusRef","parentOnSelect","useContext","SelectableContext","tabContext","TabContext","listNode","getNextActiveTab","offset","currentListNode","items","qsa","activeChild","querySelector","index","nextIndex","handleSelect","event","mergedRef","useMergedRefs","value","NavContext","makeEventKey","nextActiveChild","preventDefault","dataset","Item","NavItem","useNavItem","id","disabled","navContext","isActive","contextControllerId","contextControlledId","mountOnEnter","isPropagationStopped","Button","eventKey","options","href","meta","String","Context","createContext","Provider","context","node","compareDocumentPosition","toArray","Function","prototype","bind","call","slice","element","selector","querySelectorAll","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","handleClick","CloseButton","variant","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","parseFloat","classList","baseVal","hasClass","marginProp","el","adjustAndStore","restore","getSharedManager","propTypes","PropTypes","type","classNames","fadeStyles","ENTERING","ENTERED","Fade","transitionClasses","handleEnter","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","timeout","p"],"sourceRoot":""}